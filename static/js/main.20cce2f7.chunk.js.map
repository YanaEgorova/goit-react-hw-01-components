{"version":3,"sources":["components/Profile.js","randomColorGenerator.js","components/Statistics.js","components/FriendListItem.js","components/FriendList.js","components/TransactionHistory.js","index.js","components/App.js"],"names":["Profile","name","tag","location","avatar","stats","statsKeys","Object","entries","className","src","alt","map","key","defaultProps","randomColorGenerator","red","Math","random","floor","green","blue","Statistics","title","stat","id","style","backgroundColor","label","percentage","FriendListItem","isOnline","width","FriendList","friends","console","log","friend","TransactionHistory","items","item","type","amount","currency","ReactDOM","render","user","statisticalData","transactions","document","getElementById"],"mappings":"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","file":"static/js/main.20cce2f7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Profile.css';\n\nfunction Profile({ name, tag, location, avatar, stats }) {\n    const statsKeys = Object.entries(stats);\n\n    return (\n        <div className=\"Profile\">\n            <div className=\"Profile-description\">\n                <img\n                    src={avatar}\n                    alt=\"user avatar\"\n                    className=\"Profile-avatar\"\n                />\n                <p className=\"Profile-name\"> {name} </p>{' '}\n                <p className=\"Profile-tag\"> @{tag} </p>{' '}\n                <p className=\"Profile-location\"> {location} </p>{' '}\n            </div>{' '}\n            <ul className=\"Profile-stats\">\n                {' '}\n                {statsKeys.map(key => (\n                    <li className=\"Profile-statsItem\" key={key[0]}>\n                        <span className=\"Profile-statsItem--first\">\n                            {' '}\n                            {key[0]}{' '}\n                        </span>{' '}\n                        <span className=\"Profile-statsItem--second\">\n                            {' '}\n                            {key[1]}{' '}\n                        </span>\n                    </li>\n                ))}\n            </ul>{' '}\n        </div>\n    );\n}\n\nProfile.defaultProps = {\n    avatar:\n        'https://smartlanding.biz/wp-content/uploads/2015/03/kartinki-zaglushki.png',\n};\nProfile.propTypes = {\n    avatar: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    stats: PropTypes.objectOf(PropTypes.number),\n};\n\nexport default Profile;\n","export default function randomColorGenerator() {\n    let red = 0 + Math.random() * (254 + 1 - 0);\n    red = Math.floor(red);\n    let green = 0 + Math.random() * (254 + 1 - 0);\n    green = Math.floor(green);\n    let blue = 0 + Math.random() * (254 + 1 - 0);\n    blue = Math.floor(blue);\n    let rgb = `rgb(${red}, ${green},${blue})`;\n    return rgb;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport randomColorGenerator from '../randomColorGenerator';\nimport './Statistics.css';\n\nfunction Statistics({ title, stats }) {\n    return (\n        <section className=\"Statistics\">\n            {' '}\n            {title && <h2 className=\"Statistics-title\"> {title} </h2>}\n            <ul className=\"Statistics-list\">\n                {' '}\n                {stats.map(stat => (\n                    <li\n                        className=\"Statistics-item\"\n                        key={stat.id}\n                        style={{ backgroundColor: randomColorGenerator() }}\n                    >\n                        <span className=\"Statistics-span--first\">\n                            {' '}\n                            {stat.label}{' '}\n                        </span>{' '}\n                        <span className=\"Statistics-span--second\">\n                            {' '}\n                            {stat.percentage} %{' '}\n                        </span>{' '}\n                    </li>\n                ))}{' '}\n            </ul>{' '}\n        </section>\n    );\n}\n\nStatistics.defaultProps = {\n    title: 'Upload stats',\n};\nStatistics.propTypes = {\n    title: PropTypes.string,\n    stats: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            label: PropTypes.string.isRequired,\n            percentage: PropTypes.number.isRequired,\n        }),\n    ),\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FriendListItem.css';\n\nfunction FriendListItem({ avatar, name, isOnline }) {\n  return (\n    <li className=\"FriendListItem-item\">\n      <span\n        className=\"FriendListItem-status\"\n        style={{ backgroundColor: isOnline ? 'green' : 'red' }}\n      >\n        {' '}\n      </span>{' '}\n      <img className=\"FriendListItem-avatar\" src={avatar} alt=\"\" width=\"48\" />\n      <p className=\"FriendListItem-name\"> {name} </p>{' '}\n    </li>\n  );\n}\n\nFriendListItem.defaultProps = {\n  avatar:\n    'https://smartlanding.biz/wp-content/uploads/2015/03/kartinki-zaglushki.png',\n};\nFriendListItem.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FriendList.css';\nimport FriendListItem from './FriendListItem';\n\nfunction FriendList({ friends }) {\n    console.log(friends);\n    return (\n        <ul className=\"FriendList-list\">\n            {' '}\n            {friends.map(friend => (\n                <FriendListItem\n                    key={friend.id}\n                    avatar={friend.avatar}\n                    name={friend.name}\n                    isOnline={friend.isOnline}\n                />\n            ))}{' '}\n        </ul>\n    );\n}\n\nFriendList.propTypes = {\n    friends: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TransactionHistory.css';\n\nfunction TransactionHistory({ items }) {\n    return (\n        <table className=\"TransactionHistory\">\n            <thead>\n                <tr>\n                    <th> Type </th>\n                    <th> Amount </th>\n                    <th> Currency </th>\n                </tr>\n            </thead>\n            <tbody>\n                {items.map(item => (\n                    <tr key={item.id}>\n                        <td> {item.type} </td>\n                        <td> {item.amount} </td>\n                        <td> {item.currency} </td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n}\n\nTransactionHistory.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            type: PropTypes.string.isRequired,\n            amount: PropTypes.string.isRequired,\n            currency: PropTypes.string.isRequired,\n        }),\n    ),\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render( < App / > , document.getElementById('root'));","import React from 'react';\nimport user from '../user.json';\nimport statisticalData from '../statistical-data.json';\nimport friends from '../friends.json';\nimport transactions from '../transactions.json';\nimport Profile from './Profile';\nimport Statistics from './Statistics';\nimport FriendList from './FriendList';\n\nimport TransactionHistory from './TransactionHistory';\n\nexport default function App() {\n  return (\n    <>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends}> </FriendList>\n      <TransactionHistory items={transactions} />\n    </>\n  );\n}\n"],"sourceRoot":""}